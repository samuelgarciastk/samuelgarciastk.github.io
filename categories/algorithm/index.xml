<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on Gibberish - STK (゜-゜)つロ 乾杯~</title><link>https://stksgarcia.github.io/categories/algorithm/</link><description>Recent content in algorithm on Gibberish - STK (゜-゜)つロ 乾杯~</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 28 Oct 2018 15:42:00 +0800</lastBuildDate><atom:link href="https://stksgarcia.github.io/categories/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>启发式算法概述</title><link>https://stksgarcia.github.io/post/heuristic-algorithm-overview/</link><pubDate>Sun, 28 Oct 2018 15:42:00 +0800</pubDate><guid>https://stksgarcia.github.io/post/heuristic-algorithm-overview/</guid><description>&lt;p>启发式算法（Heuristic Algorithm）是相对于最优化算法提出的。它有不同的定义：&lt;/p>
&lt;ul>
&lt;li>其中一种是，一个基于直观或经验构造的算法，在可接受的花费（指计算时间和空间）下给出待解决组合优化问题每一个实例的一个可行解，该可行解与最优解的偏离程度一般不能被预计。&lt;/li>
&lt;li>另一种是，启发式算法是一种技术，这种技术使得在可接受的计算成本内去搜寻最好的解，但不一定能保证所得的可行解和最优解，甚至在多数情况下，无法阐述所得解同最优解的近似程度。&lt;/li>
&lt;/ul></description></item><item><title>粒子群算法</title><link>https://stksgarcia.github.io/post/particle-swarm-optimization/</link><pubDate>Sun, 28 Oct 2018 15:42:00 +0800</pubDate><guid>https://stksgarcia.github.io/post/particle-swarm-optimization/</guid><description>&lt;h2 id="粒子群算法-particle-swarm-optimization-pso">粒子群算法 （Particle Swarm Optimization, PSO）&lt;/h2>
&lt;p>粒子群算法，也称粒子群优化算法或鸟群觅食算法，来源于对一个简化社会模型的模拟。
PSO 算法属于进化算法的一种，和模拟退火算法相似，它也是从随机解出发，通过迭代寻找最优解，它也是通过适应度来评价解的品质，但它比遗传算法规则更为简单，它没有遗传算法的“交叉”（Crossover）和“变异”（Mutation）操作，它通过追随当前搜索到的最优值来寻找全局最优。
这种算法以其实现容易、精度高、收敛快等优点引起了学术界的重视，并且在解决实际问题中展示了其优越性。
粒子群算法是一种并行算法。&lt;/p></description></item><item><title>用遗传算法求解 N 皇后问题</title><link>https://stksgarcia.github.io/post/solving-n-queens-problem-with-genetic-algorithm/</link><pubDate>Sun, 11 Mar 2018 00:07:00 +0800</pubDate><guid>https://stksgarcia.github.io/post/solving-n-queens-problem-with-genetic-algorithm/</guid><description>&lt;h2 id="n-皇后问题">N 皇后问题&lt;/h2>
&lt;p>首先介绍八皇后问题。八皇后问题是一个以国际象棋为背景的问题：如何能够在 &lt;code>8×8&lt;/code> 的国际象棋棋盘上放置八个皇后，使得任何一个皇后都无法直接吃掉其他的皇后？
为了达到此目的，任两个皇后都不能处于同一条横行、纵行或斜线上。&lt;/p>
&lt;p>八皇后问题可以推广为更一般的 N 皇后摆放问题：这时棋盘的大小变为 &lt;code>N×N&lt;/code> 。&lt;/p></description></item></channel></rss>